#define a list
a = [1, 3, 6, 4, 2, 5, 7]
sums = 7
#decending order to improve loop performance
a.sort(reverse=True)
print('list a', a)
#output stored in one list
nlist=[]
exclude=[]

def cons_sum(arr, sums, nlist, preval):
    #preval is used to store subitem for recursive call.
    if preval == None: preval = []

    for i in range(len(arr)):
        if arr[i] == sums:
            if len(preval) == 0:
                nlist.append([arr[i]])
            else:
                temp = preval + [(arr[i])]
                #for i in temp: exclude.append(i) #invoild repeated use
                nlist.append(temp)

        elif arr[i] < sums:
            next_total = sums - arr[i]
            if next_total > 0:
                cons_sum( [i for i in arr[i+1:] if i not in exclude], next_total, nlist, preval + [arr[i]])
            elif next_total == 0:
                nlist.append([preval + arr[i]])


    # return nlist

cons_sum(a, sums, nlist,  None)
print(nlist)